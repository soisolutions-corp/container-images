name: Build Container Images

on:
  push:
    tags:
      - '*'

permissions:
  contents: read
  packages: write

jobs:
  set-matrix:
    name: Setup Job Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: set-matrix
        name: Setup Matrix
        shell: bash
        run: |
          TAG="${{ github.ref_name }}"
          if [ ! -d images/${TAG%-*} ]; then
            echo "${{ github.ref_name }} is not a valid tag for this workflow! Use the format <image>-<semver>. Image must be one of: $(ls -1 images | xargs -n1 basename | jq --raw-input | jq -rcs 'map(.) | join(", ")')" >&2
            exit 1
          fi
          echo "matrix={\"include\":$(ls -1 images/${TAG%-*}/*Dockerfile | xargs -n1 basename | jq --raw-input | jq -cs 'map( {"image": "'${TAG%-*}'", "version": "'${TAG##*-}'", "dockerfile": .} | if (.dockerfile | endswith(".Dockerfile")) then .suffix=(.dockerfile | rtrimstr(".Dockerfile")) else . end)')}" >> "$GITHUB_OUTPUT"

  build:
    name: Building image - ${{ matrix.image }}:${{ matrix.version }}${{ matrix.suffix && format('-%s', matrix.suffix) || ''}}
    runs-on: ubuntu-latest
    needs: set-matrix
    strategy:
      matrix: ${{ fromJSON(needs.set-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ !env.ACT }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        if: ${{ !env.ACT }}
        with:
          images: ghcr.io/soisolutions-corp/${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.version }}
            type=raw,value=latest,enable=${{ ! matrix.suffix }}
          flavor: |
            suffix=${{ matrix.suffix || '' }}

      - name: Build Docker Container Image
        uses: docker/build-push-action@v6
        with:
          push: ${{ !env.ACT }}
          tags: ${{ steps.meta.outputs.tags }}
          context: backend/
          file: backend/Dockerfile.dist
          platforms: linux/amd64,linux/arm64
